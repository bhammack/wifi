Components this project will require:
  1.  Airmon-ng, or some kind of other wifi scanning utility. Preferably with API bindings.
    - Or it seems I can use ioctl. Read the link below...
    - http://blog.ajhodges.com/2011/10/using-ioctl-to-gather-wifi-information.html
    - https://www.aircrack-ng.org/doku.php?id=airodump-ng
    * http://stackoverflow.com/questions/400240/how-can-i-get-a-list-of-available-wireless-networks-on-linux
    
  2.  GPS module. Necessary to get the current position.
    - The "gpsd" daemon seems to be the UNIX de-facto standard for GPS communication. 
    - https://en.wikipedia.org/wiki/Gpsd
    
  3.  SQL instance. Will likely use sqlite3, cause it's just fantastic.
    - https://www.tutorialspoint.com/sqlite/sqlite_c_cpp.htm
  
  4.  Webserver. Not necessary, but useful for hosting a custom google maps, showing locations.
    - I've done this before with the bustracker program (or was it Leaflet.js?). Either way...
    - https://developers.google.com/maps/
    - http://leafletjs.com/
  
  5.  Calculator program. Something to translate the data points we collect to estimated coordaintes.
    - Read this:
    - http://www.javawa.nl/coordcalc_en.html

Findings from initial research:
  1.  There aren't any bindings for airodump-ng (the classic 80211 packet sniffer).
        However, the application itself is written in C. This could be useful.
      The IOctl link only works on an already-connected interface. Not what I'm looking for.
      Wifite is a pythonic automater for aircrack-ng. It wraps the airodump process. 
        I'd rather not just "wrap" airodump. Too easy to do.
